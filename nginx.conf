# /etc/nginx/sites-available/service.toastduck.com.conf

access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log warn;

upstream medusa_backend {
    server medusa:9000;
    
    # 连接池配置
    keepalive 128;          # 保持的空闲连接数
    keepalive_timeout 60s; # 空闲连接保持时间
    keepalive_requests 10000; # 单个连接最大请求数
}

upstream medusa_frontend {
    server web:8000;
    
    # 连接池配置
    keepalive 128;          # 保持的空闲连接数
    keepalive_timeout 60s; # 空闲连接保持时间
    keepalive_requests 10000; # 单个连接最大请求数
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    location = / {
        rewrite ^/$ /app/ last;
    }

    location / {
        proxy_pass http://medusa_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
}

# HTTP 重定向到 HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name toastduck.com 47.100.50.239;
    
    # 强制HTTPS重定向
    return 301 https://$host$request_uri;
}

# HTTPS 主配置
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name toastduck.com 47.100.50.239;

    # SSL证书配置（替换为实际路径）
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/toastduck.com.key;
    
    # 安全增强配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;  # 开启OCSP装订
    ssl_stapling_verify on;

    # 关键超时设置
    proxy_connect_timeout 15s;
    proxy_send_timeout 30s;
    proxy_read_timeout 60s;
    send_timeout 30s;
  
  	location = / {
        return 301 https://$host$request_uri;
    }
  
    # 代理配置到Node服务
    location / {
        proxy_pass http://medusa_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_set_header Keep-Alive "timeout=60";
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    # 安全响应头
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
}

server {
    listen 80;
    listen [::]:80;
    server_name www.toastduck.com;
    
    # 强制HTTPS重定向
    return 301 https://$host$request_uri;
}

# HTTPS 主配置
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.toastduck.com;

    # SSL证书配置（替换为实际路径）
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/toastduck.com.key;
    
    # 安全增强配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;  # 开启OCSP装订
    ssl_stapling_verify on;

    # 关键超时设置
    proxy_connect_timeout 15s;
    proxy_send_timeout 30s;
    proxy_read_timeout 60s;
    send_timeout 30s;

  	location = / {
        return 301 https://$host/app/;
    }
  
    # 代理配置到Node服务
    location / {
        proxy_pass http://medusa_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_set_header Keep-Alive "timeout=60";
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    # 安全响应头
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
}
